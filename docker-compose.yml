#version: '3.8'
services: 
  hadoop:
    container_name: 'hadoop'
    image: 'hadoop'
    build:
      context: .
      dockerfile: hadoop/Dockerfile
    stdin_open: true
    tty: true
    ports:
      - '8088:8088'
      - '9870:9870'
      - '9864:9864'
      - '19888:19888'
      - '8042:8042'
      - '8888:8888'
    volumes:
      - hadoop_config:/opt/hadoop/etc/hadoop
      - hadoop_hdfs:/opt/hadoop/hdfs
      - hive_config:/opt/hive/conf
        #    depends_on:
        #      - mysql
  spark:
    container_name: 'spark'
    image: 'spark'
    build:
      context: .
      dockerfile: spark/Dockerfile
    stdin_open: true
    tty: true
    ports:
      - '8080:8080'
      - '8081:8081'
      - '18080:18080'
      - '4040:4040'
      - '7077:7077'
      - '9000:9000'
    volumes:
      - hadoop_config:/opt/hadoop/etc/hadoop:ro
      - hive_config:/opt/spark/conf:ro
      - ./spark/jupyter:/root/jupyter
      - ./spark/conf/jupyter_notebook_config.py:/root/.jupyter/jupyter_notebook_config.py
  mysql:
    container_name: 'mysql'
    image: 'mysql'
    ports:
      - '3306:3306'
      - '8083:8080'
    volumes:
      - mysql:/var/lib/mysql
      - ./mysql/conf:/docker-entrypoint-initdb.d
    environment:
      MYSQL_ROOT_PASSWORD: root
  grafana:
    container_name: 'grafana'
    image: 'grafana/grafana'
    ports:
      - '3000:3000'
  airflow:
    container_name: 'airflow'
    image: 'airflow'
    build:
      context: .
      dockerfile: airflow/Dockerfile
    stdin_open: true
    tty: true
    ports:
      - '8082:8082'
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./spark/pyspark_scripts:/opt/airflow/pyspark_scripts
      - hadoop_config:/opt/hadoop/etc/hadoop:ro
    depends_on:
      - mysql
  kafka:
    container_name: 'kafka'
    image: 'apache/kafka:latest'
    stdin_open: true
    tty: true
    ports:
      - '9092:9092'
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_LISTENERS: PLAINTEXT://kafka:9092,CONTROLLER://kafka:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka:9093'
      KAFKA_LOG_DIRS: '/var/lib/kafka/data'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    volumes:
      - kafka:/var/lib/kafka/data
volumes:
  hadoop_config:
  hadoop_hdfs:
  hive_config:
  mysql:
  kafka:
